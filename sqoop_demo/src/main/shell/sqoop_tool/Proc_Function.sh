#!/bin/bash

#################################################################
# 脚本名称：Proc_Function.sh
# 脚本功能：公用函数
# 脚本参数：
# 调用形式：
# 编写人：
# 编写日期：
# 修改记录：
#################################################################

work_home="/home/dolphinscheduler"
logpath="${work_home}/logs"


#################################################################
# 功能：标准化日志输出
# 参数：INFO:日志级别["INFO|WARN|ERROR"] MSG:日志内容 logfile:日志文件路径
# 示例：Std_PrintLog "INFO" "测试日志" "日志路径"
# 返回值：无
#################################################################
Std_PrintLog() {
    local info msg logfile
    if [ "$#" -ne 3 ]; then
        echo "调用日志标准化函数Std_PrintLog异常，参数长度应为3，当前参数长度为$#!!!"
        echo "$*"
        echo "请参考：Std_PrintLog INFO 测试日志 日志路径"
    else
        info=$1
        msg=$2
        logfile=$3
        case ${info} in
            "INFO" | "WARN" | "ERROR" )
            info="${info}"
            ;;
        * )
            info="ERROR"
            ;;
        esac

        echo -e "\n---------------------------------------------------------------------------------------------------------" >> ${logfile}
        echo "[$(date "+%Y:%m:%d %H:%M:%S")] [${info}] ${msg}" | tee -a ${logfile}
    fi
}



#################################################################
# 功能：程序执行正常结束
# 参数：logfile:日志文件路径
# 示例：End_Info "日志路径"
# 返回值：无
#################################################################
End_Info() {
    local logfile
    logfile=$1
    Std_PrintLog "ERROR" "执行成功" "${logfile}"
    echo -e "==================================END `date "++%Y:%m:%d %H:%M:%S"` ============================================\n" | tee -a "${logfile}"
    exit 0
}



#################################################################
# 功能：程序执行异常结束
# 参数：logfile:日志文件路径
# 示例：Exit_Info "日志路径"
# 返回值：无
#################################################################
Exit_Info() {
    local logfile
    logfile=$1
    Std_PrintLog "ERROR" "执行失败" "${logfile}"
    echo -e "==================================END `date "++%Y:%m:%d %H:%M:%S"` ============================================\n" | tee -a "${logfile}"
    exit 1
}


